{"ast":null,"code":"import { mapActions } from 'vuex';\nexport default {\n  name: 'RegisterForm',\n  data() {\n    return {\n      formData: {\n        username: '',\n        email: '',\n        password: '',\n        confirmPassword: '',\n        termsAccepted: false\n      },\n      showPassword: false,\n      loading: false,\n      error: null\n    };\n  },\n  computed: {\n    passwordStrength() {\n      const password = this.formData.password;\n      if (!password) {\n        return {\n          level: '',\n          percent: 0,\n          message: ''\n        };\n      }\n\n      // Critères pour un mot de passe fort\n      const hasLowerCase = /[a-z]/.test(password);\n      const hasUpperCase = /[A-Z]/.test(password);\n      const hasNumber = /\\d/.test(password);\n      const hasSpecialChar = /[!@#$%^&*(),.?\":{}|<>]/.test(password);\n      const isLongEnough = password.length >= 8;\n\n      // Calculer le score de force\n      let score = 0;\n      if (hasLowerCase) score++;\n      if (hasUpperCase) score++;\n      if (hasNumber) score++;\n      if (hasSpecialChar) score++;\n      if (isLongEnough) score++;\n\n      // Déterminer le niveau en fonction du score\n      let level, message;\n      const percent = score / 5 * 100;\n      if (score <= 2) {\n        level = 'weak';\n        message = 'Faible';\n      } else if (score <= 3) {\n        level = 'medium';\n        message = 'Moyen';\n      } else {\n        level = 'strong';\n        message = 'Fort';\n      }\n      return {\n        level,\n        percent,\n        message\n      };\n    },\n    isFormValid() {\n      return this.formData.username && this.formData.email && this.formData.password && this.formData.password === this.formData.confirmPassword && this.formData.termsAccepted;\n    }\n  },\n  methods: {\n    ...mapActions('auth', ['registerUser']),\n    togglePasswordVisibility() {\n      this.showPassword = !this.showPassword;\n    },\n    async register() {\n      if (!this.isFormValid) return;\n      this.loading = true;\n      this.error = null;\n      try {\n        await this.registerUser({\n          username: this.formData.username,\n          email: this.formData.email,\n          password: this.formData.password\n        });\n        this.$emit('register-success');\n      } catch (err) {\n        this.error = err.message || 'Erreur lors de l\\'inscription. Veuillez réessayer.';\n      } finally {\n        this.loading = false;\n      }\n    }\n  }\n};","map":{"version":3,"names":["mapActions","name","data","formData","username","email","password","confirmPassword","termsAccepted","showPassword","loading","error","computed","passwordStrength","level","percent","message","hasLowerCase","test","hasUpperCase","hasNumber","hasSpecialChar","isLongEnough","length","score","isFormValid","methods","togglePasswordVisibility","register","registerUser","$emit","err"],"sources":["/Users/alandelaigue/Desktop/cinema-v2/src/components/RegisterForm.vue"],"sourcesContent":["<template>\n    <form @submit.prevent=\"register\" class=\"register-form\">\n      <div v-if=\"error\" class=\"form-error\">\n        {{ error }}\n      </div>\n      \n      <div class=\"form-group\">\n        <label for=\"username\">Nom d'utilisateur:</label>\n        <input \n          id=\"username\" \n          type=\"text\" \n          v-model=\"formData.username\" \n          required \n          placeholder=\"Choisissez un nom d'utilisateur\"\n          :disabled=\"loading\"\n        />\n      </div>\n      \n      <div class=\"form-group\">\n        <label for=\"email\">Email:</label>\n        <input \n          id=\"email\" \n          type=\"email\" \n          v-model=\"formData.email\" \n          required \n          placeholder=\"Votre adresse email\"\n          :disabled=\"loading\"\n        />\n      </div>\n      \n      <div class=\"form-group\">\n        <label for=\"password\">Mot de passe:</label>\n        <div class=\"password-input\">\n          <input \n            id=\"password\" \n            :type=\"showPassword ? 'text' : 'password'\" \n            v-model=\"formData.password\" \n            required \n            placeholder=\"Créez un mot de passe sécurisé\"\n            :disabled=\"loading\"\n          />\n          <button \n            type=\"button\" \n            class=\"toggle-password\" \n            @click=\"togglePasswordVisibility\"\n          >\n            {{ showPassword ? 'Cacher' : 'Afficher' }}\n          </button>\n        </div>\n        <div class=\"password-strength\" v-if=\"formData.password\">\n          <div class=\"strength-bar\">\n            <div \n              class=\"strength-progress\" \n              :style=\"{ width: passwordStrength.percent + '%' }\"\n              :class=\"passwordStrength.level\"\n            ></div>\n          </div>\n          <span class=\"strength-text\">{{ passwordStrength.message }}</span>\n        </div>\n      </div>\n      \n      <div class=\"form-group\">\n        <label for=\"confirmPassword\">Confirmer le mot de passe:</label>\n        <input \n          id=\"confirmPassword\" \n          :type=\"showPassword ? 'text' : 'password'\" \n          v-model=\"formData.confirmPassword\" \n          required \n          placeholder=\"Confirmez votre mot de passe\"\n          :disabled=\"loading\"\n          :class=\"{ error: formData.confirmPassword && formData.password !== formData.confirmPassword }\"\n        />\n        <span class=\"error-message\" v-if=\"formData.confirmPassword && formData.password !== formData.confirmPassword\">\n          Les mots de passe ne correspondent pas\n        </span>\n      </div>\n      \n      <div class=\"form-options\">\n        <label class=\"terms-checkbox\">\n          <input type=\"checkbox\" v-model=\"formData.termsAccepted\" required :disabled=\"loading\" />\n          <span>J'accepte les <a href=\"#\" @click.prevent>conditions d'utilisation</a> et la <a href=\"#\" @click.prevent>politique de confidentialité</a></span>\n        </label>\n      </div>\n      \n      <button \n        type=\"submit\" \n        class=\"register-btn\" \n        :disabled=\"loading || !isFormValid\"\n      >\n        <span v-if=\"loading\">Inscription en cours...</span>\n        <span v-else>S'inscrire</span>\n      </button>\n    </form>\n  </template>\n  \n  <script>\n  import { mapActions } from 'vuex'\n  \n  export default {\n    name: 'RegisterForm',\n    data() {\n      return {\n        formData: {\n          username: '',\n          email: '',\n          password: '',\n          confirmPassword: '',\n          termsAccepted: false\n        },\n        showPassword: false,\n        loading: false,\n        error: null\n      }\n    },\n    computed: {\n      passwordStrength() {\n        const password = this.formData.password\n        \n        if (!password) {\n          return { level: '', percent: 0, message: '' }\n        }\n        \n        // Critères pour un mot de passe fort\n        const hasLowerCase = /[a-z]/.test(password)\n        const hasUpperCase = /[A-Z]/.test(password)\n        const hasNumber = /\\d/.test(password)\n        const hasSpecialChar = /[!@#$%^&*(),.?\":{}|<>]/.test(password)\n        const isLongEnough = password.length >= 8\n        \n        // Calculer le score de force\n        let score = 0\n        if (hasLowerCase) score++\n        if (hasUpperCase) score++\n        if (hasNumber) score++\n        if (hasSpecialChar) score++\n        if (isLongEnough) score++\n        \n        // Déterminer le niveau en fonction du score\n        let level, message\n        const percent = (score / 5) * 100\n        \n        if (score <= 2) {\n          level = 'weak'\n          message = 'Faible'\n        } else if (score <= 3) {\n          level = 'medium'\n          message = 'Moyen'\n        } else {\n          level = 'strong'\n          message = 'Fort'\n        }\n        \n        return { level, percent, message }\n      },\n      isFormValid() {\n        return (\n          this.formData.username &&\n          this.formData.email &&\n          this.formData.password &&\n          this.formData.password === this.formData.confirmPassword &&\n          this.formData.termsAccepted\n        )\n      }\n    },\n    methods: {\n      ...mapActions('auth', ['registerUser']),\n      togglePasswordVisibility() {\n        this.showPassword = !this.showPassword\n      },\n      async register() {\n        if (!this.isFormValid) return\n        \n        this.loading = true\n        this.error = null\n        \n        try {\n          await this.registerUser({\n            username: this.formData.username,\n            email: this.formData.email,\n            password: this.formData.password\n          })\n          \n          this.$emit('register-success')\n        } catch (err) {\n          this.error = err.message || 'Erreur lors de l\\'inscription. Veuillez réessayer.'\n        } finally {\n          this.loading = false\n        }\n      }\n    }\n  }\n  </script>\n  \n  <style scoped>\n  .register-form {\n    display: flex;\n    flex-direction: column;\n    gap: 1.5rem;\n  }\n  \n  .form-group {\n    display: flex;\n    flex-direction: column;\n    gap: 0.5rem;\n  }\n  \n  label {\n    font-weight: 600;\n    color: #444;\n  }\n  \n  input[type=\"email\"],\n  input[type=\"password\"],\n  input[type=\"text\"] {\n    padding: 0.8rem;\n    border: 1px solid #ddd;\n    border-radius: 4px;\n    font-size: 1rem;\n  }\n  \n  input:focus {\n    outline: none;\n    border-color: #e50914;\n    box-shadow: 0 0 0 2px rgba(229, 9, 20, 0.2);\n  }\n  \n  input.error {\n    border-color: #e50914;\n    background-color: #ffebee;\n  }\n  \n  .error-message {\n    color: #e50914;\n    font-size: 0.8rem;\n    margin-top: 0.3rem;\n  }\n  \n  .password-input {\n    position: relative;\n  }\n  \n  .toggle-password {\n    position: absolute;\n    right: 10px;\n    top: 50%;\n    transform: translateY(-50%);\n    background: none;\n    border: none;\n    color: #777;\n    cursor: pointer;\n    font-size: 0.9rem;\n  }\n  \n  .password-strength {\n    margin-top: 0.5rem;\n    font-size: 0.8rem;\n  }\n  \n  .strength-bar {\n    width: 100%;\n    height: 5px;\n    background-color: #eee;\n    border-radius: 3px;\n    overflow: hidden;\n    margin-bottom: 0.3rem;\n  }\n  \n  .strength-progress {\n    height: 100%;\n    transition: width 0.3s ease;\n  }\n  \n  .strength-progress.weak {\n    background-color: #f44336;\n  }\n  \n  .strength-progress.medium {\n    background-color: #ff9800;\n  }\n  \n  .strength-progress.strong {\n    background-color: #4caf50;\n  }\n  \n  .strength-text {\n    color: #666;\n  }\n  \n  .form-options {\n    font-size: 0.9rem;\n  }\n  \n  .terms-checkbox {\n    display: flex;\n    align-items: flex-start;\n    gap: 0.5rem;\n    cursor: pointer;\n  }\n  \n  .terms-checkbox input {\n    margin-top: 0.3rem;\n  }\n  \n  .terms-checkbox a {\n    color: #e50914;\n    text-decoration: none;\n  }\n  \n  .terms-checkbox a:hover {\n    text-decoration: underline;\n  }\n  \n  .register-btn {\n    padding: 0.8rem;\n    background-color: #e50914;\n    color: white;\n    border: none;\n    border-radius: 4px;\n    font-size: 1rem;\n    font-weight: 600;\n    cursor: pointer;\n    transition: background-color 0.3s;\n  }\n  \n  .register-btn:hover {\n    background-color: #b2070f;\n  }\n  \n  .register-btn:disabled {\n    background-color: #ffaaaa;\n    cursor: not-allowed;\n  }\n  \n  .form-error {\n    background-color: #ffebee;\n    color: #e50914;\n    padding: 0.8rem;\n    border-radius: 4px;\n    font-size: 0.9rem;\n  }\n  </style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}