{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"poster-container\"\n};\nconst _hoisted_2 = [\"src\", \"alt\"];\nconst _hoisted_3 = {\n  class: \"movie-info\"\n};\nconst _hoisted_4 = {\n  class: \"movie-title\"\n};\nconst _hoisted_5 = {\n  class: \"movie-year\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: \"movie-card\",\n    onClick: _cache[1] || (_cache[1] = $event => _ctx.$emit('click'))\n  }, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"img\", {\n    src: $options.posterUrl,\n    alt: $options.movieTitle,\n    class: \"movie-poster\",\n    onError: _cache[0] || (_cache[0] = (...args) => $options.handleImageError && $options.handleImageError(...args))\n  }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_2)]), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"h3\", _hoisted_4, _toDisplayString($options.movieTitle), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_5, _toDisplayString($options.movieYear), 1 /* TEXT */)])]);\n}","map":{"version":3,"names":["class","_createElementBlock","onClick","_cache","$event","_ctx","$emit","_createElementVNode","_hoisted_1","src","$options","posterUrl","alt","movieTitle","onError","args","handleImageError","_hoisted_2","_hoisted_3","_hoisted_4","_toDisplayString","_hoisted_5","movieYear"],"sources":["/Users/alandelaigue/Desktop/cinema-v2/src/components/MovieCard.vue"],"sourcesContent":["<template>\n  <div class=\"movie-card\" @click=\"$emit('click')\">\n    <div class=\"poster-container\">\n      <img \n        :src=\"posterUrl\"\n        :alt=\"movieTitle\"\n        class=\"movie-poster\"\n        @error=\"handleImageError\"\n      />\n    </div>\n    <div class=\"movie-info\">\n      <h3 class=\"movie-title\">{{ movieTitle }}</h3>\n      <p class=\"movie-year\">{{ movieYear }}</p>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'MovieCard',\n  props: {\n    movie: {\n      type: Object,\n      required: true\n    }\n  },\n  data() {\n    return {\n      // Utilisez une URL d'image locale pour l'image par défaut\n      defaultImage: '/images/placeholder-movie.jpg',\n      // Pour suivre si on a déjà essayé de charger une image alternative\n      triedAlternative: false\n    };\n  },\n  computed: {\n    posterUrl() {\n      // Vérification de sécurité pour s'assurer que le film est défini\n      if (!this.movie) return this.defaultImage;\n\n      // Vérifiez si on a une URL directe\n      if (this.movie.directPosterUrl) {\n        return this.movie.directPosterUrl;\n      }\n\n      // Gestion pour API TMDB avec Poster (format de notre application)\n      if (this.movie.Poster) {\n        return this.movie.Poster;\n      }\n      \n      // Gestion pour API TMDB avec format original\n      if (this.movie.poster_path) {\n        return `https://image.tmdb.org/t/p/w500${this.movie.poster_path}`;\n      }\n\n      // Cas spécial pour \"Take the Money and Run\" (ID: 1441966)\n      if (this.movie.imdbID === '1441966' || this.movie.id === '1441966') {\n        return `https://image.tmdb.org/t/p/w500/fJkxQQd65iR6BMcYOxNgWwWibPu.jpg`;\n      }\n\n      // Essayez d'utiliser l'image de backdrop comme alternative\n      if (this.movie.backdrop_path || this.movie.backdropPath) {\n        const path = this.movie.backdrop_path || this.movie.backdropPath;\n        // Vérifiez si backdropPath est déjà une URL complète\n        if (typeof path === 'string' && path.startsWith('http')) {\n          return path;\n        } else if (path) {\n          return `https://image.tmdb.org/t/p/w500${path}`;\n        }\n      }\n      \n      // Image par défaut en dernier recours\n      return this.defaultImage;\n    },\n    \n    movieTitle() {\n      if (!this.movie) return 'Titre non disponible';\n      return this.movie.Title || this.movie.title || 'Titre non disponible';\n    },\n    \n    movieYear() {\n      if (!this.movie) return '';\n      if (this.movie.Year) return this.movie.Year;\n      if (this.movie.release_date) return this.formatYear(this.movie.release_date);\n      return '';\n    }\n  },\n  methods: {\n    formatYear(dateString) {\n      if (!dateString) return '';\n      return new Date(dateString).getFullYear();\n    },\n    \n    handleImageError(e) {\n      console.log(`Erreur de chargement d'image pour ${this.movieTitle}`, e.target.src);\n      \n      // Éviter les boucles infinies\n      if (e.target.src === this.defaultImage) return;\n\n      // Cas spécial pour \"Take the Money and Run\" si l'ID correspond\n      if ((this.movie.imdbID === '1441966' || this.movie.id === '1441966') && !this.triedAlternative) {\n        console.log('Tentative avec URL spécifique pour Take the Money and Run');\n        this.triedAlternative = true;\n        e.target.src = `https://image.tmdb.org/t/p/w500/fJkxQQd65iR6BMcYOxNgWwWibPu.jpg`;\n        return;\n      }\n      \n      // Essayez d'abord avec une autre taille d'image\n      if (e.target.src.includes('w500') && !this.triedAlternative) {\n        console.log('Tentative avec une taille d\\'image alternative');\n        this.triedAlternative = true;\n        \n        // Essayez une taille plus petite\n        if (this.movie.poster_path) {\n          e.target.src = `https://image.tmdb.org/t/p/w342${this.movie.poster_path}`;\n          return;\n        } else if (this.movie.backdrop_path || this.movie.backdropPath) {\n          // Essayez d'utiliser l'image de fond\n          const path = this.movie.backdrop_path || this.movie.backdropPath;\n          if (typeof path === 'string' && !path.startsWith('http')) {\n            e.target.src = `https://image.tmdb.org/t/p/w780${path}`;\n            return;\n          }\n        }\n      }\n      \n      // Si toutes les tentatives échouent, utilisez l'image par défaut\n      e.target.src = this.defaultImage;\n    },\n\n    mounted() {\n      // Log pour déboguer\n      console.log('Structure du film sur la page d\\'accueil:', this.movie);\n    }\n  }\n}\n</script>\n\n<style scoped>\n.movie-card {\n  background-color: white;\n  border-radius: 8px;\n  overflow: hidden;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n  transition: transform 0.3s, box-shadow 0.3s;\n  cursor: pointer;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n}\n\n.movie-card:hover {\n  transform: translateY(-5px);\n  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);\n}\n\n.poster-container {\n  position: relative;\n  overflow: hidden;\n  padding-top: 150%; /* Ratio d'aspect 2:3 pour les affiches de films */\n}\n\n.movie-poster {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n}\n\n.movie-info {\n  padding: 1rem;\n  flex-grow: 1;\n  display: flex;\n  flex-direction: column;\n}\n\n.movie-title {\n  font-size: 1rem;\n  font-weight: 600;\n  margin-bottom: 0.3rem;\n  color: #333;\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n}\n\n.movie-year {\n  color: #666;\n  font-size: 0.9rem;\n  margin-top: auto;\n}\n</style>"],"mappings":";;EAESA,KAAK,EAAC;AAAkB;mBAFjC;;EAUSA,KAAK,EAAC;AAAY;;EACjBA,KAAK,EAAC;AAAa;;EACpBA,KAAK,EAAC;AAAY;;uBAXzBC,mBAAA,CAaM;IAbDD,KAAK,EAAC,YAAY;IAAEE,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,IAAA,CAAAC,KAAK;MACnCC,mBAAA,CAOM,OAPNC,UAOM,GANJD,mBAAA,CAKE;IAJCE,GAAG,EAAEC,QAAA,CAAAC,SAAS;IACdC,GAAG,EAAEF,QAAA,CAAAG,UAAU;IAChBb,KAAK,EAAC,cAAc;IACnBc,OAAK,EAAAX,MAAA,QAAAA,MAAA,UAAAY,IAAA,KAAEL,QAAA,CAAAM,gBAAA,IAAAN,QAAA,CAAAM,gBAAA,IAAAD,IAAA,CAAgB;2CAPhCE,UAAA,E,GAUIV,mBAAA,CAGM,OAHNW,UAGM,GAFJX,mBAAA,CAA6C,MAA7CY,UAA6C,EAAAC,gBAAA,CAAlBV,QAAA,CAAAG,UAAU,kBACrCN,mBAAA,CAAyC,KAAzCc,UAAyC,EAAAD,gBAAA,CAAhBV,QAAA,CAAAY,SAAS,iB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}