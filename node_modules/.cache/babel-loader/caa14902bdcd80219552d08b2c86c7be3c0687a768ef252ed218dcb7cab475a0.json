{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = {\n  class: \"pagination\"\n};\nconst _hoisted_2 = [\"disabled\"];\nconst _hoisted_3 = {\n  class: \"page-numbers\"\n};\nconst _hoisted_4 = [\"onClick\"];\nconst _hoisted_5 = [\"disabled\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = $event => $options.changePage($props.currentPage - 1)),\n    class: \"page-btn prev-btn\",\n    disabled: $props.currentPage === 1,\n    title: \"Page précédente\"\n  }, \" ‹ \", 8 /* PROPS */, _hoisted_2), _createElementVNode(\"div\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.visiblePages, page => {\n    return _openBlock(), _createElementBlock(\"button\", {\n      key: page,\n      onClick: $event => $options.changePage(page),\n      class: _normalizeClass([\"page-btn number-btn\", {\n        active: page === $props.currentPage\n      }])\n    }, _toDisplayString(page), 11 /* TEXT, CLASS, PROPS */, _hoisted_4);\n  }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = $event => $options.changePage($props.currentPage + 1)),\n    class: \"page-btn next-btn\",\n    disabled: $props.currentPage === $props.totalPages,\n    title: \"Page suivante\"\n  }, \" › \", 8 /* PROPS */, _hoisted_5)]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","onClick","_cache","$event","$options","changePage","$props","currentPage","disabled","title","_hoisted_2","_hoisted_3","_Fragment","_renderList","visiblePages","page","key","_normalizeClass","active","_hoisted_4","totalPages","_hoisted_5"],"sources":["/Users/alandelaigue/Desktop/cinema-v2/src/components/Pagination.vue"],"sourcesContent":["<template>\n  <div class=\"pagination\">\n    <button \n      @click=\"changePage(currentPage - 1)\" \n      class=\"page-btn prev-btn\" \n      :disabled=\"currentPage === 1\"\n      title=\"Page précédente\"\n    >\n      &lsaquo;\n    </button>\n    \n    <div class=\"page-numbers\">\n      <button \n        v-for=\"page in visiblePages\" \n        :key=\"page\" \n        @click=\"changePage(page)\" \n        class=\"page-btn number-btn\"\n        :class=\"{ active: page === currentPage }\"\n      >\n        {{ page }}\n      </button>\n    </div>\n    \n    <button \n      @click=\"changePage(currentPage + 1)\" \n      class=\"page-btn next-btn\" \n      :disabled=\"currentPage === totalPages\"\n      title=\"Page suivante\"\n    >\n      &rsaquo;\n    </button>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'Pagination',\n  props: {\n    currentPage: {\n      type: Number,\n      required: true\n    },\n    totalPages: {\n      type: Number,\n      required: true\n    }\n  },\n  computed: {\n    // Calcule les numéros de page à afficher\n    visiblePages() {\n      const maxVisiblePages = 5;\n      let pages = [];\n      \n      // Si le nombre total de pages est inférieur ou égal au nombre maximum de pages visibles\n      if (this.totalPages <= maxVisiblePages) {\n        for (let i = 1; i <= this.totalPages; i++) {\n          pages.push(i);\n        }\n      } else {\n        // Calcule les pages visibles en fonction de la page courante\n        let startPage = Math.max(1, this.currentPage - Math.floor(maxVisiblePages / 2));\n        let endPage = startPage + maxVisiblePages - 1;\n        \n        // Ajuste les pages de début et de fin si nécessaire\n        if (endPage > this.totalPages) {\n          endPage = this.totalPages;\n          startPage = Math.max(1, endPage - maxVisiblePages + 1);\n        }\n        \n        for (let i = startPage; i <= endPage; i++) {\n          pages.push(i);\n        }\n      }\n      \n      return pages;\n    }\n  },\n  methods: {\n    changePage(page) {\n      if (page !== this.currentPage && page >= 1 && page <= this.totalPages) {\n        this.$emit('page-change', page);\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n.pagination {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 2rem 0;\n}\n\n.page-btn {\n  background-color: #f5f5f5;\n  border: 1px solid #ddd;\n  color: #333;\n  padding: 0.5rem 0.8rem;\n  margin: 0 0.2rem;\n  cursor: pointer;\n  transition: all 0.3s;\n  border-radius: 4px;\n}\n\n.page-btn:hover:not(:disabled) {\n  background-color: #e0e0e0;\n}\n\n.page-btn.active {\n  background-color: #e50914;\n  color: white;\n  border-color: #e50914;\n}\n\n.page-btn:disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\n\n.page-numbers {\n  display: flex;\n  margin: 0 0.5rem;\n}\n\n@media (max-width: 576px) {\n  .page-btn {\n    padding: 0.4rem 0.6rem;\n    font-size: 0.9rem;\n  }\n}\n</style>"],"mappings":";;EACOA,KAAK,EAAC;AAAY;mBADzB;;EAWSA,KAAK,EAAC;AAAc;mBAX7B;mBAAA;;uBACEC,mBAAA,CA8BM,OA9BNC,UA8BM,GA7BJC,mBAAA,CAOS;IANNC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,QAAA,CAAAC,UAAU,CAACC,MAAA,CAAAC,WAAW;IAC9BV,KAAK,EAAC,mBAAmB;IACxBW,QAAQ,EAAEF,MAAA,CAAAC,WAAW;IACtBE,KAAK,EAAC;KACP,KAED,iBATJC,UAAA,GAWIV,mBAAA,CAUM,OAVNW,UAUM,I,kBATJb,mBAAA,CAQSc,SAAA,QApBfC,WAAA,CAauBT,QAAA,CAAAU,YAAY,EAApBC,IAAI;yBADbjB,mBAAA,CAQS;MANNkB,GAAG,EAAED,IAAI;MACTd,OAAK,EAAAE,MAAA,IAAEC,QAAA,CAAAC,UAAU,CAACU,IAAI;MACvBlB,KAAK,EAhBboB,eAAA,EAgBc,qBAAqB;QAAAC,MAAA,EACTH,IAAI,KAAKT,MAAA,CAAAC;MAAW;wBAEnCQ,IAAI,gCAnBfI,UAAA;oCAuBInB,mBAAA,CAOS;IANNC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,QAAA,CAAAC,UAAU,CAACC,MAAA,CAAAC,WAAW;IAC9BV,KAAK,EAAC,mBAAmB;IACxBW,QAAQ,EAAEF,MAAA,CAAAC,WAAW,KAAKD,MAAA,CAAAc,UAAU;IACrCX,KAAK,EAAC;KACP,KAED,iBA9BJY,UAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}